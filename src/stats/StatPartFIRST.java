package stats;

import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * @author 		Niklas Karlsson<br>
 * @version     1.0<br>
 *  a "chain of responsibility" that build up the XML-string.<br>
 * build the tag: date and generated by tag
 *
 * @see Chain
 */
public class StatPartFIRST implements Chain {
	private  Chain nextInChain;
	// Defines the next Object to receive the data 
	@Override
	public void setNextChain(Chain nextInChain) {
		this.nextInChain = nextInChain;

	}

	@Override
	public void getStatInString(XMLholder theXMLForStats) {
		System.out.println("in chain 1: " + theXMLForStats.getFinalXML());
		// first make the startTag of the XML:
		// in XMLForStats
		//then make the Statcall in the database
		
		String date = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss").format(new Date());
		String status = "0";
		try {
			if (theXMLForStats.getRowStat() == null){
				status = "0";
			}else {
				status = "1";
			}
		} catch (Exception e) {
			status = "0";
			e.printStackTrace();
		}
		
		//then populate the XMLForStats.
		theXMLForStats.addThisXMLStringblock(""
				+ "<status>"
					+ status
				+ "</status>"
				+ "<datetime>"
					+ date 
				+ "</datetime>"
				+ "<generatedby>"
					+ theXMLForStats.getRowStat().getGeneratedBy() 
				+ "</generatedby>"
				+ "");
		
		//then pass it to the next
			nextInChain.getStatInString(theXMLForStats);
			
		}		

	}

